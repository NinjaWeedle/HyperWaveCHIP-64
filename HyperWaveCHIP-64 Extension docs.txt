HyperWaveCHIP-64 specification

By oxiti8

This extension builds off of HYPERCHIP-64, which builds off of XO-CHIP 1.1.

At minimum, an XO-CHIP 1.0 implementation is required to implement HyperWaveCHIP-64.

NEW OPS:

00F0: NOT the contents of the the currently selected bit plane.

00F1: Enable OR mode drawing.

00F2: Enable AND mode drawing

00F3: Enable XOR mode drawing.

5XY1: Skip if VX > VY. Will also skip over the F000 instruction (long i). Inherited from CHIP8E.

8XYC: Set VX to VX * VY. Set VF to higher 8 bits of the product, and set VX to (VX modulo 256). If not, set VF to 0.

8XYD: VX = VX // VY. VF = VX % VY. If VY = 0 at the start of the opcode, set BOTH VX and VF to 0. Prevents division by zero.

8xyF: VX = vY // vX. VF = vY % vX. If VX = 0 at the start of the opcode, set BOTH VX and VF to 0. Prevents division by zero.

FN03: Change color of palette n to Join([I], [I+1], [I+2]).  Set RGB color for plane # N to join [I](R) [I+1],(G) [I+2](B)

F100 nnnn: long jump. Set PC to NNNN

F200 nnnn: long subroutine. Store PC in stack, then set PC to NNNN

F300 nnnn: long jump0. Set PC to NNNN + V0


For FN03, the value of N (Ranging from 0-15) represents which palette is being modified. Here's a guide:
N = 0: The palette used for the Background color (Background in Octo)
N = 1: The palette for Plane 1 only (Foreground 1 in Octo)
N = 2: The palette for Plane 2 only (Foreground 2 in Octo)
N = 3: The palette for Plane 3 (Blended in Octo)
The structure of the opcode allows for 4 bitplanes and 16 colors maximum.

The actual color palette data itself is stored as 3 bytes in RRGGBB format.

Accessing the bytes in memory that contain the color data is handled much like how you would handle accessing sprite or audio sample data- Here is an example in Octo:

: main
i := green # i points to the location of the color data in memory.
0xF0 0x03 # FN03. N is 0, so the background palette is selected to be modified, and the palette for the background is set to the RRGGBB value stored at i in memory (In this case, 0x00 0xFF 0x00, the color green. The palette used for the background is changed to #00FF00.)

: green
0x00 0xFF 0x00 # RRGGBB format color data.




SOME PSEUDOCODE TRANSLATIONS FOR LANGUAGES THAT ARE NOT SCRATCH:

"Vf is set to Floor of (result / 256)" translates to "Vf = (int) (result / 256);" in a language like Java.

"value1 modulo value2" translates to "value1 % value2" in a language like Java. 
